.comingSoon {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: min(100vh, 70rem);
  z-index: 0;

  .wrap {
    position: relative;
    height: 100%;
  }

  .grid-2 {
    padding-top: 0;
    padding-bottom: 0;
  }
}

.comingSoon {
  //states
  &-01 {
    .background {
      video,
      img {
        position: absolute;
        right: 0;
        bottom: 0;
        min-width: 100%;
        min-height: 100%;
        object-fit: cover;
        z-index: -1;
      }
      //states
      &.bw {
        img,
        video {
          filter: grayscale(1) blur(1rem);
        }
      }
    }

    /* Add some content at the bottom of the video/page */
    .overlay {
      position: fixed;
      bottom: 0;
      background: var(--primary);
      opacity: .8;
      width: 100vh;
      height: 100vh;
    }

    .image {
      position: relative;
      display: none;
      height: 100%;

      @media (min-width: @screenMd) {
        display: inherit;
      }

      img {
        position: absolute;
        max-height: 80vh;
        right: 0;
        bottom: 0;
        z-index: -1;
      }
    }

    h1 {
      .fontSize(3, 8);

      line-height: .75;
      color: var(--secondary);
      text-transform: uppercase;
    }

    h2 {
      .fontSize(1.25, 3);

      color: var(--secondary);
      text-transform: uppercase;
    }

    hr {
      margin-left: 0;
      max-width: 50%;
      background-color: var(--secondary);
      height: .25rem;
      border: 0;
    }

    .benefits {
      .grid(8, 1, 1);

      @media (min-width: @screenMd) {
        .grid(16, 2, 2);
      }

      margin: clamp(unit(1.5, rem), calc(unit(1.5, rem) + (4 - 1.5) * var(--calcWidth)), unit(4, rem)) 0;

      &Item {
        .flex(row, flex-start, center);
        .fontSize(.75, 1.5);

        color: var(--white);
        text-transform: uppercase;

        img {
          @min: 1.75;
          @max: 2.5;

          margin-right: clamp(unit(.5, rem), calc(unit(.5, rem) + (1 - .5) * var(--calcWidth)), unit(1, rem));
          width: clamp(unit(@min, rem), calc(unit(@min, rem) + (@max - @min) * var(--calcWidth)), unit(@max, rem));
        }
      }
    }
  }
}
